name: Test and Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PLATFORMS: linux/amd64,linux/arm64,linux/arm/v7

jobs:
  execute-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run tests
        run: |
          cd src
          pip install -r requirements.txt
          cd test
          python test.py

  create-release:
    needs: execute-tests
    if: success()
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Python Semantic Release
        uses: python-semantic-release/python-semantic-release@v10
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  build-and-push:
    needs: create-release
    if: success()
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: collectu
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get latest Git tag
        id: version
        run: |
          # Fetch the latest tag generated by semantic-release
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Latest Git tag: $latest_tag"
          echo "VERSION=$latest_tag" >> $GITHUB_ENV

      - name: Set Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            collectu/collectu-core
          tags: |
            type=raw,value=latest
            type=raw,value=${{ env.VERSION }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: ./
          push: true
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
