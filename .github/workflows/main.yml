name: Test code, create release, and deploy Docker images

on:
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  execute-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run multiple commands
        run: |
          cd src
          pip install -r requirements.txt
          cd test
          python test.py

  create-release:
    needs: execute-tests
    if: success()
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Python Semantic Release
        uses: python-semantic-release/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  build-and-push-ghcr:
    needs: execute-tests
    if: success()
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          buildkitd-flags: --debug
      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=true
      - name: Build and push Docker image to GHCR
        uses: docker/build-push-action@v5
        with:
          context: ./
          push: true
          platforms: linux/amd64,linux/arm/v7
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
      - name: Delete old versions
        uses: actions/delete-package-versions@v4
        with: 
          package-name: 'collectu-core'
          package-type: 'container'
          min-versions-to-keep: 3
          delete-only-untagged-versions: 'false'

  build-and-push-dockerhub:
    needs: execute-tests
    if: success()
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: collectu
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: ./
          push: true
          platforms: linux/amd64,linux/arm/v7
          tags: |
            collectu/collectu-core:latest

